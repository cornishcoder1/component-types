{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/component-types/react-components/src/components/UseEffectCounter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n\nfunction UseEffectCounter() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    console.log(\"count 1 effect\");\n    document.title = count;\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count => count + 1),\n      children: [\"Increment Count (\", count, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UseEffectCounter, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n\n_c = UseEffectCounter;\nexport default UseEffectCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseEffectCounter\");","map":{"version":3,"sources":["/workspace/component-types/react-components/src/components/UseEffectCounter.js"],"names":["React","useState","useEffect","UseEffectCounter","count","setCount","console","log","document","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAC,IAAAA,QAAQ,CAACC,KAAT,GAAiBL,KAAjB;AACD,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;AAKA,sBACE;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAA/B;AAAA,sCACoBA,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAdQD,gB;;KAAAA,gB;AAgBT,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction UseEffectCounter() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    console.log(\"count 1 effect\");\n    document.title = count;\n  }, [count]);\n  \n  return (\n    <div>\n      <button onClick={() => setCount((count) => count + 1)}>\n        Increment Count ({count})\n      </button>\n    </div>\n  );\n}\n\nexport default UseEffectCounter; "]},"metadata":{},"sourceType":"module"}